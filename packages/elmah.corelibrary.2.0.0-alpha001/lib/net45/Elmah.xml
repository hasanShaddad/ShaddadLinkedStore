<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Elmah</name>
    </assembly>
    <members>
        <member name="T:Elmah.ApplicationException">
            <summary>
            The exception that is thrown when a non-fatal error occurs. 
            This exception also serves as the base for all exceptions thrown by
            this library.
            </summary>
        </member>
        <member name="M:Elmah.ApplicationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ApplicationException"/> class.
            </summary>
        </member>
        <member name="M:Elmah.ApplicationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ApplicationException"/> class 
            with a specified error message.
            </summary>
        </member>
        <member name="M:Elmah.ApplicationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ApplicationException"/> 
            class with a specified error message and a reference to the 
            inner exception that is the cause of this exception.
            </summary>
        </member>
        <member name="M:Elmah.ApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ApplicationException"/> class 
            with serialized data.
            </summary>
        </member>
        <member name="M:Elmah.Async.TaskFromResultOrError``1(``0,System.Exception)">
            <summary>
            Creates a task that has already completed with either the
            given result or faulted with the given exception.
            </summary>
            <remarks>
            If <paramref name="exception"/> is supplied then 
            <paramref name="result"/> is ignored.
            </remarks>
        </member>
        <member name="F:Elmah.AsyncResult._owner">
            <summary>
            The object which started the operation.
            </summary>
        </member>
        <member name="F:Elmah.AsyncResult._operationId">
            <summary>
            Used to verify the BeginXXX and EndXXX calls match.
            </summary>
        </member>
        <member name="P:Elmah.Build.ImageRuntimeVersion">
            <summary>
            Gets a string representing the version of the CLR saved in 
            the file containing the manifest. Under 1.0, this returns
            the hard-wired string "v1.0.3705".
            </summary>
        </member>
        <member name="F:Elmah.Build.Status">
            <summary>
            This is the status or milestone of the build. Examples are
            M1, M2, ..., Mn, BETA1, BETA2, RC1, RC2, RTM.
            </summary>
        </member>
        <member name="M:Elmah.ExceptionExtensions.TrySetCallerInfo(System.Exception,Elmah.CallerInfo)">
            <summary>
            Attempts to install a <see cref="T:Elmah.CallerInfo"/> into an
            <see cref="T:System.Exception"/> via <see cref="P:System.Exception.Data"/>.
            </summary>
            <returns>
            Returns <see cref="T:Elmah.CallerInfo"/> that was replaced otherwise
            <c>null</c>.
            </returns>
        </member>
        <member name="M:Elmah.HttpRequestValidation.TryGetUnvalidatedCollections``1(System.Web.HttpRequestBase,System.Func{System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Web.HttpCookieCollection,``0})">
            <summary>
            Returns unvalidated collections if build targets .NET Framework
            4.0 or later and if caller is hosted at run-time (based on value
            of <see cref="P:System.Web.Hosting.HostingEnvironment.IsHosted"/>) when targeting 
            .NET Framework 4.0 exclusively. In all other cases except when
            targeting .NET Framework 4.5, collections returned are validated 
            ones from <see cref="P:System.Web.HttpRequestBase.Form"/> and 
            <see cref="P:System.Web.HttpRequestBase.QueryString"/> and therefore
            could raise <see cref="T:System.Web.HttpRequestValidationException"/>.
            </summary>
        </member>
        <member name="T:Elmah.Debug">
            <summary>
            Provides methods for assertions and debugging help that is mostly 
            applicable during development.
            </summary>
        </member>
        <member name="T:Elmah.Error">
            <summary>
            Represents a logical application error (as opposed to the actual 
            exception it may be representing).
            </summary>
        </member>
        <member name="M:Elmah.Error.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.Error"/> class.
            </summary>
        </member>
        <member name="M:Elmah.Error.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.Error"/> class
            from a given <see cref="P:Elmah.Error.Exception"/> instance.
            </summary>
        </member>
        <member name="M:Elmah.Error.#ctor(System.Exception,System.Web.HttpContextBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.Error"/> class
            from a given <see cref="P:Elmah.Error.Exception"/> instance and 
            <see cref="T:System.Web.HttpContext"/> instance representing the HTTP 
            context during the exception.
            </summary>
        </member>
        <member name="P:Elmah.Error.Exception">
            <summary>
            Gets the <see cref="P:Elmah.Error.Exception"/> instance used to initialize this
            instance.
            </summary>
            <remarks>
            This is a run-time property only that is not written or read 
            during XML serialization via <see cref="M:Elmah.ErrorXml.Decode(System.Xml.XmlReader)"/> and 
            <see cref="M:Elmah.ErrorXml.Encode(Elmah.Error,System.Xml.XmlWriter)"/>.
            </remarks>
        </member>
        <member name="P:Elmah.Error.ApplicationName">
            <summary>
            Gets or sets the name of application in which this error occurred.
            </summary>
        </member>
        <member name="P:Elmah.Error.HostName">
            <summary>
            Gets or sets name of host machine where this error occurred.
            </summary>
        </member>
        <member name="P:Elmah.Error.Type">
            <summary>
            Gets or sets the type, class or category of the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Source">
            <summary>
            Gets or sets the source that is the cause of the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Message">
            <summary>
            Gets or sets a brief text describing the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Detail">
            <summary>
            Gets or sets a detailed text describing the error, such as a
            stack trace.
            </summary>
        </member>
        <member name="P:Elmah.Error.User">
            <summary>
            Gets or sets the user logged into the application at the time 
            of the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Time">
            <summary>
            Gets or sets the date and time (in local time) at which the 
            error occurred.
            </summary>
        </member>
        <member name="P:Elmah.Error.StatusCode">
            <summary>
            Gets or sets the HTTP status code of the output returned to the 
            client for the error.
            </summary>
            <remarks>
            For cases where this value cannot always be reliably determined, 
            the value may be reported as zero.
            </remarks>
        </member>
        <member name="P:Elmah.Error.WebHostHtmlMessage">
            <summary>
            Gets or sets the HTML message generated by the web host (ASP.NET) 
            for the given error.
            </summary>
        </member>
        <member name="P:Elmah.Error.ServerVariables">
            <summary>
            Gets a collection representing the Web server variables
            captured as part of diagnostic data for the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.QueryString">
            <summary>
            Gets a collection representing the Web query string variables
            captured as part of diagnostic data for the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Form">
            <summary>
            Gets a collection representing the form variables captured as 
            part of diagnostic data for the error.
            </summary>
        </member>
        <member name="P:Elmah.Error.Cookies">
            <summary>
            Gets a collection representing the client cookies
            captured as part of diagnostic data for the error.
            </summary>
        </member>
        <member name="M:Elmah.Error.ToString">
            <summary>
            Returns the value of the <see cref="P:Elmah.Error.Message"/> property.
            </summary>
        </member>
        <member name="M:Elmah.Error.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="T:Elmah.ErrorJson">
            <summary>
            Responsible for primarily encoding the JSON representation of
            <see cref="T:Elmah.Error"/> objects.
            </summary>
        </member>
        <member name="M:Elmah.ErrorJson.EncodeString(Elmah.Error)">
            <summary>
            Encodes the default JSON representation of an <see cref="T:Elmah.Error"/> 
            object to a string.
            </summary>
            <remarks>
            Only properties and collection entires with non-null
            and non-empty strings are emitted.
            </remarks>
        </member>
        <member name="M:Elmah.ErrorJson.Encode(Elmah.Error,System.IO.TextWriter)">
            <summary>
            Encodes the default JSON representation of an <see cref="T:Elmah.Error"/> 
            object to a <see cref="T:System.IO.TextWriter" />.
            </summary>
            <remarks>
            Only properties and collection entires with non-null
            and non-empty strings are emitted.
            </remarks>
        </member>
        <member name="T:Elmah.ErrorLog">
            <summary>
            Represents an error log capable of storing and retrieving errors
            generated in an ASP.NET Web application.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error in log for the application.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.LogAsync(Elmah.Error)">
            <summary>
            When overridden in a subclass, starts a task that asynchronously
            does the same as <see cref="M:Elmah.ErrorLog.Log(Elmah.Error)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.LogAsync(Elmah.Error,System.Threading.CancellationToken)">
            <summary>
            When overridden in a subclass, starts a task that asynchronously
            does the same as <see cref="M:Elmah.ErrorLog.Log(Elmah.Error)"/>. An additional parameter
            specifies a <see cref="T:System.Threading.CancellationToken"/> to use.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.BeginLog(Elmah.Error,System.AsyncCallback,System.Object)">
            <summary>
            When overridden in a subclass, begins an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.Log(Elmah.Error)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.EndLog(System.IAsyncResult)">
            <summary>
            When overridden in a subclass, ends an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.Log(Elmah.Error)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetError(System.String)">
            <summary>
            Retrieves a single application error from log given its 
            identifier, or null if it does not exist.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetErrorAsync(System.String)">
            <summary>
            When overridden in a subclass, starts a task that asynchronously
            does the same as <see cref="M:Elmah.ErrorLog.GetError(System.String)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetErrorAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            When overridden in a subclass, starts a task that asynchronously
            does the same as <see cref="M:Elmah.ErrorLog.GetError(System.String)"/>. An additional parameter
            specifies a <see cref="T:System.Threading.CancellationToken"/> to use.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.BeginGetError(System.String,System.AsyncCallback,System.Object)">
            <summary>
            When overridden in a subclass, begins an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.GetError(System.String)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.EndGetError(System.IAsyncResult)">
            <summary>
            When overridden in a subclass, ends an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.GetError(System.String)"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry})">
            <summary>
            Retrieves a page of application errors from the log in 
            descending order of logged time.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetErrorsAsync(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry})">
            <summary>
            When overridden in a subclass, starts a task that asynchronously
            does the same as <see cref="M:Elmah.ErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry})"/>. An additional 
            parameter specifies a <see cref="T:System.Threading.CancellationToken"/> to use.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetErrorsAsync(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry},System.Threading.CancellationToken)">
            <summary>
            When overridden in a subclass, starts a task that asynchronously
            does the same as <see cref="M:Elmah.ErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry})"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.BeginGetErrors(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry},System.AsyncCallback,System.Object)">
            <summary>
            When overridden in a subclass, begins an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry})"/>.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.EndGetErrors(System.IAsyncResult)">
            <summary>
            When overridden in a subclass, ends an asynchronous version 
            of <see cref="M:Elmah.ErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry})"/>.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLog.Name">
            <summary>
            Get the name of this log.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLog.ApplicationName">
            <summary>
            Gets the name of the application to which the log is scoped.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLog.GetDefault(System.Web.HttpContextBase)">
            <summary>
            Gets the default error log implementation specified in the 
            configuration file, or the in-memory log implemention if
            none is configured.
            </summary>
        </member>
        <member name="T:Elmah.ErrorLogEntry">
            <summary>
            Binds an <see cref="P:Elmah.ErrorLogEntry.Error"/> instance with the <see cref="T:Elmah.ErrorLog"/>
            instance from where it was served.
            </summary>
        </member>
        <member name="M:Elmah.ErrorLogEntry.#ctor(Elmah.ErrorLog,System.String,Elmah.Error)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.ErrorLogEntry"/> class
            for a given unique error entry in an error log.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLogEntry.Log">
            <summary>
            Gets the <see cref="T:Elmah.ErrorLog"/> instance where this entry 
            originated from.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLogEntry.Id">
            <summary>
            Gets the unique identifier that identifies the error entry 
            in the log.
            </summary>
        </member>
        <member name="P:Elmah.ErrorLogEntry.Error">
            <summary>
            Gets the <see cref="P:Elmah.ErrorLogEntry.Error"/> object held in the entry.
            </summary>
        </member>
        <member name="T:Elmah.ErrorXml">
            <summary>
            Responsible for encoding and decoding the XML representation of
            an <see cref="T:Elmah.Error"/> object.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.DecodeString(System.String)">
            <summary>
            Decodes an <see cref="T:Elmah.Error"/> object from its default XML 
            representation.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.Decode(System.Xml.XmlReader)">
            <summary>
            Decodes an <see cref="T:Elmah.Error"/> object from its XML representation.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.ReadXmlAttributes(System.Xml.XmlReader,Elmah.Error)">
            <summary>
            Reads the error data in XML attributes.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.ReadInnerXml(System.Xml.XmlReader,Elmah.Error)">
            <summary>
            Reads the error data in child nodes.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.EncodeString(Elmah.Error)">
            <summary>
            Encodes the default XML representation of an <see cref="T:Elmah.Error"/> 
            object to a string.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.Encode(Elmah.Error,System.Xml.XmlWriter)">
            <summary>
            Encodes the XML representation of an <see cref="T:Elmah.Error"/> object.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.WriteXmlAttributes(Elmah.Error,System.Xml.XmlWriter)">
            <summary>
            Writes the error data that belongs in XML attributes.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.WriteInnerXml(Elmah.Error,System.Xml.XmlWriter)">
            <summary>
            Writes the error data that belongs in child nodes.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.Encode(System.Collections.Specialized.NameValueCollection,System.Xml.XmlWriter)">
            <summary>
            Encodes an XML representation for a 
            <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.
            </summary>
        </member>
        <member name="M:Elmah.ErrorXml.UpcodeTo(System.Xml.XmlReader,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Updates an existing <see cref="T:System.Collections.Specialized.NameValueCollection" /> object from
            its XML representation.
            </summary>
        </member>
        <member name="T:Elmah.JsonTextWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only 
            way of generating streams or files containing JSON Text according
            to the grammar rules laid out in 
            <a href="http://www.ietf.org/rfc/rfc4627.txt">RFC 4627</a>.
            </summary>
            <remarks>
            This class supports ELMAH and is not intended to be used directly 
            from your code. It may be modified or removed in the future without 
            notice. It has public accessibility for testing purposes. If you
            need a general-purpose JSON Text encoder, consult
            <a href="http://www.json.org/">JSON.org</a> for implementations
            or use classes available from the Microsoft .NET Framework.
            </remarks>
        </member>
        <member name="T:Elmah.Mask">
            <summary>
            Collection of utility methods for masking values.
            </summary>
        </member>
        <member name="T:Elmah.MemoryErrorLog">
            <summary>
            An <see cref="T:Elmah.ErrorLog"/> implementation that uses memory as its 
            backing store. 
            </summary>
            <remarks>
            All <see cref="T:Elmah.MemoryErrorLog"/> instances will share the same memory 
            store that is bound to the application (not an instance of this class).
            </remarks>
        </member>
        <member name="F:Elmah.MemoryErrorLog.MaximumSize">
            <summary>
            The maximum number of errors that will ever be allowed to be stored
            in memory.
            </summary>
        </member>
        <member name="F:Elmah.MemoryErrorLog.DefaultSize">
            <summary>
            The maximum number of errors that will be held in memory by default 
            if no size is specified.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.MemoryErrorLog"/> class
            with a default size for maximum recordable entries.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.MemoryErrorLog"/> class
            with a specific size for maximum recordable entries.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.MemoryErrorLog"/> class
            using a dictionary of configured settings.
            </summary>
        </member>
        <member name="P:Elmah.MemoryErrorLog.Name">
            <summary>
            Gets the name of this error log implementation.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error to the application memory.
            </summary>
            <remarks>
            If the log is full then the oldest error entry is removed.
            </remarks>
        </member>
        <member name="M:Elmah.MemoryErrorLog.GetError(System.String)">
            <summary>
            Returns the specified error from application memory, or null 
            if it does not exist.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry})">
            <summary>
            Returns a page of errors from the application memory in
            descending order of logged time.
            </summary>
        </member>
        <member name="M:Elmah.MemoryErrorLog.Reset">
            <summary>
            Used to clear the content of the collection used by this logger. This method is ment
            for testing and debugging purposes only.
            </summary>
        </member>
        <member name="T:Elmah.SccStamp">
            <summary>
            Represents a source code control (SCC) stamp and its components.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.#ctor(System.String)">
            <summary>
            Initializes an <see cref="T:Elmah.SccStamp"/> instance given a SCC stamp 
            ID. The ID is expected to be in the format popularized by CVS 
            and SVN.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.Id">
            <summary>
            Gets the original SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.Author">
            <summary>
            Gets the author component of the SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.FileName">
            <summary>
            Gets the file name component of the SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.Revision">
            <summary>
            Gets the revision number component of the SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.LastChanged">
            <summary>
            Gets the last modification time component of the SCC stamp ID.
            </summary>
        </member>
        <member name="P:Elmah.SccStamp.LastChangedUtc">
            <summary>
            Gets the last modification time, in coordinated universal time 
            (UTC), component of the SCC stamp ID in local time.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.FindAll(System.Reflection.Assembly)">
            <summary>
            Finds and builds an array of <see cref="T:Elmah.SccStamp"/> instances 
            from all the <see cref="T:Elmah.SccAttribute"/> attributes applied to
            the given assembly.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.FindLatest(System.Reflection.Assembly)">
            <summary>
            Finds the latest SCC stamp for an assembly. The latest stamp is 
            the one with the highest revision number.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.FindLatest(Elmah.SccStamp[])">
            <summary>
            Finds the latest stamp among an array of <see cref="T:Elmah.SccStamp"/> 
            objects. The latest stamp is the one with the highest revision 
            number.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.SortByRevision(Elmah.SccStamp[])">
            <summary>
            Sorts an array of <see cref="T:Elmah.SccStamp"/> objects by their 
            revision numbers in ascending order.
            </summary>
        </member>
        <member name="M:Elmah.SccStamp.SortByRevision(Elmah.SccStamp[],System.Boolean)">
            <summary>
            Sorts an array of <see cref="T:Elmah.SccStamp"/> objects by their 
            revision numbers in ascending or descending order.
            </summary>
        </member>
        <member name="T:Elmah.ServiceProviderQueryHandler">
            <summary>
            A delegate to an implementation that returns an <see cref="T:System.IServiceProvider"/>
            object based on a given context.
            </summary>
        </member>
        <member name="T:Elmah.ServiceCenter">
            <summary>
            Central point for locating arbitrary services.
            </summary>
        </member>
        <member name="F:Elmah.ServiceCenter.Default">
            <summary>
            The default and factory-supplied implementation of 
            <see cref="T:Elmah.ServiceProviderQueryHandler"/>.
            </summary>
        </member>
        <member name="P:Elmah.ServiceCenter.Current">
            <summary>
            The current <see cref="T:Elmah.ServiceProviderQueryHandler"/> implementation
            in effect.
            </summary>
        </member>
        <member name="M:Elmah.ServiceCenter.FindService(System.Object,System.Type)">
            <summary>
            Attempts to locate a service of a given type based on a given context.
            If the service is not available, a null reference is returned.
            </summary>
        </member>
        <member name="M:Elmah.ServiceCenter.GetService(System.Object,System.Type)">
            <summary>
            Gets a service of a given type based on a given context.
            If the service is not available, an exception is thrown.
            </summary>
        </member>
        <member name="M:Elmah.ServiceCenter.GetServiceProvider(System.Object)">
            <summary>
            Gets an <see cref="T:System.IServiceProvider"/> object based on a 
            supplied context and which can be used to request further
            services.
            </summary>
        </member>
        <member name="T:Elmah.SimpleServiceProviderFactory">
            <summary>
            A simple factory for creating instances of types specified in a 
            section of the configuration file.
            </summary>
        </member>
        <member name="T:Elmah.XmlFileErrorLog">
            <summary>
            An <see cref="T:Elmah.ErrorLog"/> implementation that uses XML files stored on 
            disk as its backing store.
            </summary>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.XmlFileErrorLog"/> class
            using a dictionary of configured settings.
            </summary>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.MapPath(System.String)">
            <remarks>
            This method is excluded from inlining so that if 
            HostingEnvironment does not need JIT-ing if it is not implicated
            by the caller.
            </remarks>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Elmah.XmlFileErrorLog"/> class
            to use a specific path to store/load XML files.
            </summary>
        </member>
        <member name="P:Elmah.XmlFileErrorLog.LogPath">
            <summary>
            Gets the path to where the log is stored.
            </summary>
        </member>
        <member name="P:Elmah.XmlFileErrorLog.Name">
            <summary>
            Gets the name of this error log implementation.
            </summary>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.Log(Elmah.Error)">
            <summary>
            Logs an error to the database.
            </summary>
            <remarks>
            Logs an error as a single XML file stored in a folder. XML files are named with a
            sortable date and a unique identifier. Currently the XML files are stored indefinately.
            As they are stored as files, they may be managed using standard scheduled jobs.
            </remarks>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.GetErrors(System.Int32,System.Int32,System.Collections.Generic.ICollection{Elmah.ErrorLogEntry})">
            <summary>
            Returns a page of errors from the folder in descending order 
            of logged time as defined by the sortable filenames.
            </summary>
        </member>
        <member name="M:Elmah.XmlFileErrorLog.GetError(System.String)">
            <summary>
            Returns the specified error from the filesystem, or throws an exception if it does not exist.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AssertionMethodAttribute">
            <summary>
            Indicates that the marked method is assertion method, i.e. it halts control flow if one of the conditions is satisfied. 
            To set the condition, mark one of the parameters with <see cref="T:JetBrains.Annotations.AssertionConditionAttribute"/> attribute.
            </summary>
            <seealso cref="T:JetBrains.Annotations.AssertionConditionAttribute"/>
        </member>
        <member name="T:JetBrains.Annotations.AssertionConditionAttribute">
            <summary>
            Indicates the condition parameter of the assertion method. 
            The method itself should be marked by <see cref="T:JetBrains.Annotations.AssertionMethodAttribute"/> attribute.
            The mandatory argument of the attribute is the assertion type.
            </summary>
            <seealso cref="T:JetBrains.Annotations.AssertionConditionType"/>
        </member>
        <member name="M:JetBrains.Annotations.AssertionConditionAttribute.#ctor(JetBrains.Annotations.AssertionConditionType)">
            <summary>
            Initializes new instance of AssertionConditionAttribute.
            </summary>
            <param name="conditionType">Specifies condition type.</param>
        </member>
        <member name="P:JetBrains.Annotations.AssertionConditionAttribute.ConditionType">
            <summary>
            Gets condition type.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AssertionConditionType">
            <summary>
            Specifies assertion type. If the assertion method argument satisifes the condition, then the execution continues. 
            Otherwise, execution is assumed to be halted.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_TRUE">
            <summary>
            Indicates that the marked parameter should be evaluated to true.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_FALSE">
            <summary>
            Indicates that the marked parameter should be evaluated to false.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_NULL">
            <summary>
            Indicates that the marked parameter should be evaluated to null value.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>
            Indicates that the marked parameter should be evaluated to not null value.
            </summary>
        </member>
        <member name="T:Mannex.Int32Extensions">
            <summary>
            Extension methods for <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:Mannex.Int32Extensions.ToInvariantString(System.Int32)">
            <summary>
            Converts <see cref="T:System.Int32"/> to its string representation in the
            invariant culture.
            </summary>
        </member>
        <member name="M:Mannex.Int32Extensions.DivRem``1(System.Int32,System.Int32,System.Func{System.Int32,System.Int32,``0})">
            <summary>
            Calculates the quotient and remainder from dividing two numbers 
            and returns a user-defined result.
            </summary>
        </member>
        <member name="T:Mannex.Collections.Generic.DictionaryExtensions">
            <summary>
            Extension methods for <see cref="T:System.Collections.Generic.Dictionary`2"/>.
            </summary>
        </member>
        <member name="M:Mannex.Collections.Generic.DictionaryExtensions.Find``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Finds the value for a key, returning the default value for 
            <typeparamref name="TKey"/> if the key is not present.
            </summary>
        </member>
        <member name="M:Mannex.Collections.Generic.DictionaryExtensions.Find``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Finds the value for a key, returning a given default value for 
            <typeparamref name="TKey"/> if the key is not present.
            </summary>
        </member>
        <member name="T:Mannex.ICloneableExtensions">
            <summary>
            Extension methods for <see cref="T:System.ICloneable"/> objects.
            </summary>
        </member>
        <member name="M:Mannex.ICloneableExtensions.CloneObject``1(``0)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="T:Mannex.Threading.Tasks.TaskCompletionSourceExtensions">
            <summary>
            Extension methods for <see cref="T:System.Threading.Tasks.TaskCompletionSource`1"/>.
            </summary>
        </member>
        <member name="M:Mannex.Threading.Tasks.TaskCompletionSourceExtensions.TryConcludeFrom``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``0})">
            <summary>
            Attempts to conclude <see cref="T:System.Threading.Tasks.TaskCompletionSource`1"/>
            as being canceled, faulted or having completed successfully
            based on the corresponding status of the given 
            <see cref="T:System.Threading.Tasks.Task`1"/>.
            </summary>
        </member>
        <member name="T:Mannex.Threading.Tasks.TaskExtensions">
            <summary>
            Extension methods for <see cref="T:System.Threading.Tasks.Task"/>.
            </summary>
        </member>
        <member name="M:Mannex.Threading.Tasks.TaskExtensions.Apmize``1(System.Threading.Tasks.Task{``0},System.AsyncCallback,System.Object)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task`1"/> that can be used as the
            <see cref="T:System.IAsyncResult"/> return value from the method
            that begin the operation of an API following the 
            <a href="http://msdn.microsoft.com/en-us/library/ms228963.aspx">Asynchronous Programming Model</a>.
            If an <see cref="T:System.AsyncCallback"/> is supplied, it is invoked
            when the supplied task concludes (fails, cancels or completes
            successfully).
            </summary>
        </member>
        <member name="M:Mannex.Threading.Tasks.TaskExtensions.Apmize``1(System.Threading.Tasks.Task{``0},System.AsyncCallback,System.Object,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Returns a <see cref="T:System.Threading.Tasks.Task`1"/> that can be used as the
            <see cref="T:System.IAsyncResult"/> return value from the method
            that begin the operation of an API following the 
            <a href="http://msdn.microsoft.com/en-us/library/ms228963.aspx">Asynchronous Programming Model</a>.
            If an <see cref="T:System.AsyncCallback"/> is supplied, it is invoked
            when the supplied task concludes (fails, cancels or completes
            successfully).
            </summary>
        </member>
    </members>
</doc>
