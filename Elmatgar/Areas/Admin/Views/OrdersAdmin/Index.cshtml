@using Elmatgar.ViewModels
@model IEnumerable<Elmatgar.Core.Models.Orders>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @*@Html.ActionLink("Create New", "Create")*@
</p>

<input type="hidden" id="ordercount" class="ordercount" value="@Model.Count(c => c.OrderStatus == "promoted")"/>
@*<br />
<ul class="nav navbar-nav navbar-right">
    <li class="Noti">
        <a href="#">
            <i class="glyphicon glyphicon-globe"></i>
            <span class="padge js-NotiCount"> @Model.Count(c => c.OrderStatus == "promoted") </span>
        </a>
    </li>
</ul>*@
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.Label("Full Name")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderStatus)
        </th>
        <th>

            @Html.Label("Payment info")
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastUpdateDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastUpdatedBy)
            </th>
            <th></th>*@
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <a href="@Url.Action("Index", "OrderDetails", new {id = item.Id})" class="btn btn-primary ">
                    <i> @item.Id </i>
                </a>
                @*@Html.DisplayFor(modelItem => item.Id)*@
            </td>
            <td>
                @{ string Fullname = item.Customers.CFirstName + " " + item.Customers.CLastName;}
                @Html.DisplayFor(modelItem => Fullname)
            </td>@{//todo:  using something like progress bare to show the order status
            }
            <td>

                @*@Ajax.ActionLink(item.OrderStatus, "Shipping", "OrdersAdmin", new {orderNo = item.Id},
                    new AjaxOptions {HttpMethod = "Get", UpdateTargetId = "tableId", InsertionMode = InsertionMode.Replace})*@
                @Html.DisplayFor(modelItem => item.OrderStatus) 


            </td>
            <td>
                @{
                    string PaymentInfo;
                    if (item.PaymentType == PaymentType.visa.ToString())
                    {
                        PaymentInfo = "Paied";
                    }
                    else
                    {
                        PaymentInfo = "Unpaied";
                    }


                }
                @Html.DisplayFor(modelItem => PaymentInfo)
            </td>
            @*    <td>
                            @Html.DisplayFor(modelItem => item.CreationDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastUpdateDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedBy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastUpdatedBy)
                        </td>
                        <td>
                         @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id=item.Id })
                </td>*@
        </tr>
                    }

</table>

   @*<input type="hidden" id="userListIdHidden" value="Noti" />
 

<div class="container">
    
     
        <a href="#" ><label  for="discussion"></label></a>
     
        <input type="hidden"  id="message"/> <br />
        <input  type="hidden" id="sendmessage" value="Send" class="btn btn-success" style="height:40px;width:100px;" />
        <input type="hidden" id="displayname" />
        <input type="hidden" id="connection" />
       
   

    <audio controls="controls" id="sound1" style="width:0px;">
        <source src="~/sounds/newuser.wav" />
    </audio>
    <audio controls="controls" id="sound2" style="width:0px;">
        <source src="~/sounds/alert.wav" />
    </audio>

</div>*@

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>


    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>

        $(function () {

            var chat = $.connection.chatHub;

            chat.client.addNewMessageToPage = function (name, message, connectionid) {
                if (connectionid == $('#connection').val()) {
                    $("i[for='discussion']").html('<span class="badge badge-success"><strong>' + htmlEncode(name)
                        + '</strong> ' + htmlEncode(parseInt(message) - parseInt(document.getElementById("ordercount").value)) + '</span>');

                };
            };
            //for connect to chat
            //chat.client.addconnMessage = function (name, message, connectionid) {
            //    if (connectionid == $('#connection').val()) {

            //       // Add the message to the page.
            //        $("i[for='discussion']").html('<span class="badge badge-success">'
            //            + htmlEncode(message) + '</span>');
            //    };
            //};
            //for desconnect from chat
            chat.client.adddesconnMessage = function (name, message, connectionid) {
                if (connectionid == $('#connection').val()) {

                     // Add the message to the page.
                    $("i[for='discussion']").html('<span class="badge badge-success"><strong>' + htmlEncode(name)
                        + '</strong> ' + htmlEncode(message) + '</span>');
                };
            };

            // Get the user name and store it to prepend to messages.
            $('#displayname').val(document.getElementById("userListIdHidden").value);
            $('#connection').val(document.getElementById("userListIdHidden").value);

            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                //var sound1 = $("#sound1")[0];
                //sound1.play();
                //var currentdate = new Date();
                //var datetime = currentdate.getDate() + "/"
                //                + (currentdate.getMonth() + 1) + "/"
                //                + currentdate.getFullYear() + " time"
                //                + currentdate.getHours() + ":"
                //                + currentdate.getMinutes() + ":"
                //                + currentdate.getSeconds();
                //for connection
                //chat.server.connectMessage($('#displayname').val(), 'mr : ' + ' ' + $('#displayname').val() + ' ' + 'is connected ' + ' ' + 'at' + ' ' + datetime + ' ' + '  ' + ' ' , 'Noti');

                chat.server.connectMessage($('#displayname').val(), document.getElementById("ordercount").value, 'Noti');


                //$('#sendmessage').click(function () {
                //    var sound2 = $("#sound2")[0];
                //    sound2.play();
                //    // Call the Send method on the hub.
                //    chat.server.send($('#displayname').val(), $('#message').val(), $('#connection').val());
                //    // Clear text box and reset focus for next comment.
                //    $('#message').val('').focus();
                //});


                ////for using enter key to send
                //$('#message').keyup(function (event) {
                //    if (event.keyCode == 13) {
                //        $('#sendmessage').click();
                //    }
                //});

            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }


    </script>
}
