
@using PagedList.Mvc
@model PagedList.IPagedList<Elmatgar.Core.Models.Suppliers>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<br />
<br /><br />
<div class="searchform " align="right">
    @using (Html.BeginForm("Index", "Suppliers", FormMethod.Get, new { @class = "form-inline" }))
    {
        @Html.Label("search", "Supplier Name ", new { @class = "control-label" })
        @Html.TextBox("search", ViewBag.CurrentSearch as string, new { @class = "form-control" })
        <input type="submit" value="search" class="btn btn-default" />
    }
</div>



<h2>List of Suppliers </h2>

<p>
    <br/>
   
    <a href="@Url.Action("Create", "Suppliers")" class="btn btn-primary ">
        <i class="glyphicon glyphicon-plus" > Create </i>
    </a>

</p>

<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.SupplierName)*@
            @Ajax.ActionLink("Supplier Name", "Index", "Suppliers", new { sort = ViewBag.SupplierNameSort, search = ViewBag.CurrentSearch },
                new AjaxOptions { HttpMethod = "Get", UpdateTargetId = "tableId", InsertionMode = InsertionMode.Replace })
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.CreationDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastUpdateDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastUpdatedBy)
        </th>*@
        <th><div>
    <a href="@Url.Action("LockedIndex", "Suppliers" )" class="btn btn-warning">
        <i class="glyphicon glyphicon-remove"> Show Deleted Suppliers</i>
    </a>
</div></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SupplierName)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.CreationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdateDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdatedBy)
            </td>*@
            <td>
                <a href="@Url.Action("Edit", "Suppliers", new {id = item.Id})" class="btn btn-default">
                    <i class="glyphicon glyphicon-edit" title="Edite Supplier Data"> </i>
                </a>
                <a href="@Url.Action("Details", "Suppliers", new {id = item.Id})" class="btn btn-info">
                    <i class="glyphicon glyphicon-info-sign" title="Show Supplier Data"> </i>
                </a>

                <a href="@Url.Action("Delete", "Suppliers", new {id = item.Id})" class="btn btn-danger">
                    <i class="glyphicon glyphicon-remove" title="Delite Supplier"></i>
                </a>
                <a href="@Url.Action("Create", "SupplyOrder", new {supplerno = item.Id}, null)" class="btn btn-warning ">
                    <i class="glyphicon glyphicon-plus-sign" title="Add orders  "></i>
                </a>

            </td>


        </tr>
    }


</table>


page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sort = ViewBag.CurrentSort, search = ViewBag.CurrentSearch }))
