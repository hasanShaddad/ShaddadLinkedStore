 
@using PagedList.Mvc
@model PagedList.IPagedList<Elmatgar.Core.Models.SupplyOrderPayments>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<br />
<br />
<br/>
<div class="searchform " align="right">
    @using (Html.BeginForm("Index", "SupplyOrderPayments", FormMethod.Get, new {   @class = "form-inline" }))
    {

        @Html.Label("search", "Supplier name  ", new { @class = "control-label" })
        @Html.TextBox("search", ViewBag.CurrentSearch as string, new { @class = "form-control" })
        <input type="submit" value="search" class="btn btn-default" />
    }
</div>
<h2> List of Supply Order Payment</h2>



<p>
    <br />
    <br />
    <br />
    <a href="@Url.Action("Create", "SupplyOrderPayments")" class="btn btn-primary ">
        <i class="glyphicon glyphicon-plus"> Create </i>
    </a>

</p>
<table class="table">
    <tr>
     
        <th>
        
            @Ajax.ActionLink("Supplier Name", "Index", "SupplyOrderPayments", new {   sort = ViewBag.SupplierNameSort, search = ViewBag.CurrentSearch },
                new AjaxOptions { HttpMethod = "Get", UpdateTargetId = "tableId", InsertionMode = InsertionMode.Replace })
        </th>
        <th>
            Supply Order Id
        </th>
        <th>
          
            @Ajax.ActionLink("Paid", "Index", "SupplyOrderPayments", new { sort = ViewBag.PaidSort, search = ViewBag.CurrentSearch },
                new AjaxOptions { HttpMethod = "Get", UpdateTargetId = "tableId", InsertionMode = InsertionMode.Replace })
        </th><th>
                 Created By
</th>
        @*<th>
            @Html.DisplayNameFor(model => model.CreationDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastUpdateDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastUpdatedBy)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
      
        <td>
            @Html.DisplayFor(modelItem => item.Suppliers.SupplierName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SupplyOrderId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Paid)
        </td><td>
    @Html.DisplayFor(modelItem => item.SupplyOrders.CreatedBy)
</td>
        @*<td>
            @Html.DisplayFor(modelItem => item.CreationDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastUpdateDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastUpdatedBy)
        </td>*@
        <td>
       
            <a href="@Url.Action("Edit", "SupplyOrderPayments", new {id = item.Id})" class="btn btn-default">
                <i class="glyphicon glyphicon-edit" title="Edite Supplier Data"> </i>
            </a>
            <a href="@Url.Action("Details", "SupplyOrderPayments", new {id = item.Id})" class="btn btn-info">
                <i class="glyphicon glyphicon-info-sign" title="Show Supplier Data"> </i>
            </a>

            <a href="@Url.Action("Delete", "SupplyOrderPayments", new {id = item.Id})" class="btn btn-danger">
                <i class="glyphicon glyphicon-remove" title="Delite Supplier"></i>
            </a>
         
        </td>
    </tr>
}

</table>
page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sort = ViewBag.CurrentSort, search = ViewBag.CurrentSearch }))