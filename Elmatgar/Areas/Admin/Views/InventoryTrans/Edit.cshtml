@model Elmatgar.Core.Models.InventoryTrans

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>InventoryTrans</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ItTransDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItTransDate, "DateWithPicker")
                @Html.ValidationMessageFor(model => model.ItTransDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItSupplierNo, " Supplier Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItSupplierNo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItSupplierNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItStoreNo, " Store Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItStoreNo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItStoreNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItTransType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItTransType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItTransType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItQty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItQty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItQty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItOrderLineNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItOrderLineNo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItOrderLineNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItProdId, "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItProdId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItProdId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItPoLineNo,  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItPoLineNo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItPoLineNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItTransAmt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItTransAmt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItTransAmt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.LastUpdateDate, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.ValidationMessageFor(model => model.LastUpdateDate, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.LastUpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.ValidationMessageFor(model => model.LastUpdatedBy, "", new { @class = "text-danger" })

        </div>

        <div class="form-actions no-color">
            <a href="@Url.Action("Index", "InventoryTrans")" class="btn btn-primary">
                <div class="glyphicon glyphicon-arrow-left">  </div> Back to List
            </a>
            <input type="submit" value="Save" class="btn btn-success" />
        </div>

    </div>
}

 

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
